name: Lint

on: push

jobs:
  kotlin:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java-version: [ '8', '11', '14', '15', '17', '21' ]
    name: Kotlin jvm version ${{ matrix.java-version }}
    steps:
      - uses: actions/checkout@v4
      - name: java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: kotlin lint
        run: cd kotlin && ./gradlew ktlintCheck
      - name: detekt - kotlin
        uses: natiginfo/action-detekt-all@1.17.1
      - name: mobsfscan - kotlin
        uses: MobSF/mobsfscan@main
        with:
          args: '. --json'
  python:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8] # 2.7
    name: Python version ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          cd python/armstrong
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  typescript:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [12.x, 14.x] # 10.x, 
    name: Typescript version ${{ matrix.node-version }}
    steps:
    - uses: actions/checkout@v4
    - name: node v ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - run: |
        cd typescript
        yarn install
        yarn lint:ci
  rust:
    runs-on: ubuntu-latest
    name: Rust
    steps:
      - uses: actions/checkout@v4
      - name: Update local toolchain
        run: |
          rustup update
          rustup component add clippy
          rustup install nightly          
      - name: Toolchain info
        run: |
          cargo --version --verbose
          rustc --version
          cargo clippy --version                  
      - name: Lint
        run: |
          cd rust
          cargo fmt --all -- --check
          cargo clippy -- -D warnings # - name: Build
